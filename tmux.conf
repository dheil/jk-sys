#-----
# tmux config file - Joerg Kuetemeier - https://www.kuetemeier.net
#



#set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"

# unbind-key C-b
#set -g prefix 'C-\'
#bind-key 'C-\' send-prefix
#set -g prefix ^
#bind-key ^ send-prefix

#set-option -g prefix C-a
#unbind-key C-b
#bind-key C-a send-prefix

# base index for windows to 1 instead of 0
set -g base-index 1

# base index for panes to 1 instead of 0
set -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# pane swapping
#bind-key -r C-H swap-pane -L
#bind-key -r C-J swap-pane -D
#bind-key -r C-K swap-pane -U
#bind-key -r C-L swap-pane -R

# Smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Restore C-l to clear screen
#bind C-l send-keys "C-l"

# scrollback buffer n lines
set -g history-limit 30000

bind-key M-7 resize-pane -t 1 -x 90
bind-key M-8 resize-pane -t 1 -x 60
bind-key M-9 resize-pane -t 1 -x 30
bind-key M-0 resize-pane -t 0 -x 30

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

#----------------
# tmux theme
#

# Source:
# https://github.com/ryankuczka/dotfiles/blob/master/zsh/themes/lucius.tmux-theme
#
# Set colors and styles
set -g status "on"
set -g status-utf8 "on"
set -g status-justify "left"
set -g status-style "bg=colour236,none"

set -g message-style "fg=colour250,bg=colour236"
set -g message-command-style "fg=colour250,bg=colour236"
set -g pane-border-style "fg=colour236"
set -g pane-active-border-style "fg=colour67"

set -g status-left "#[fg=colour236,bg=colour67,bold] #S #[fg=colour67,bg=colour236,nobold,nounderscore,noitalics]"
set -g status-left-style "none"
set -g status-left-length "100"
set -g status-right "#[fg=colour239,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour250,bg=colour239] %Y-%m-%d  %H:%M #[fg=colour67,bg=colour239,nobold,nounderscore,noitalics]#[fg=colour236,bg=colour67] #h "
set -g status-right-style "none"
set -g status-right-length "100"

setw -g window-status-activity-attr "none"
setw -g window-status-activity-style "fg=colour1,bg=colour236,none"
setw -g window-status-separator ""
setw -g window-status-style "fg=colour250,bg=colour236,none"
setw -g window-status-format "#[fg=colour250,bg=colour236] #I  #W "
setw -g window-status-current-format "#[fg=colour236,bg=colour239,nobold,nounderscore,noitalics]#[fg=colour250,bg=colour239] #I  #W #[fg=colour239,bg=colour236,nobold,nounderscore,noitalics]"

#---------
# logging
# source: http://blog.matchgenius.com/tmux-practical-tips/
#

bind-key M-H pipe-pane 'cat >>$HOME/tmux-#W.log' \; display-message 'Started logging to $HOME/tmux-#W.log'
bind-key M-h pipe-pane \; display-message 'Ended logging to $HOME/tmux-#W.log'

# use C-h and Cl to cycle thru windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# make the current window the first window
bind T swap-window -t 1

# listen for activity on all windows
set -g bell-action any

# set window notifications
setw -g monitor-activity on
set -g visual-activity on

# xterm-style function key sequences
setw -g xterm-keys on

# displays
bind-key * list-clients

# Copy tmux paste buffer to CLIPBOARD
bind-key -n C-c run "tmux save-buffer - | xsel --input --clipboard"

# Paste CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind-key -n C-v run "tmux set-buffer \"$(xsel --output --clipboard)\"; tmux paste-buffer"


#-----------------------------------------------------------------------------
# mouse

# default: mouse enabled

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Toggle mouse on with ^a m
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^a M
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'


# window title
# enable wm window titles
set-option -g set-titles on

# wm window title string (uses statusbar variables)
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)

# control automatic window renaming
set-window-option -g automatic-rename on # auto name

# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 2000

# quit
bind-key Q confirm-before kill-server
